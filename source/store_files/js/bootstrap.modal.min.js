$(document).ready(function () {
    var _h = $(window).height();
    $("#wrapper_main").css("height", _h + "px");

    $(".box_btn").click(function () {
        $(this).find("img").removeClass("hidden");
    });
    persian = { 0: '۰', 1: '۱', 2: '۲', 3: '۳', 4: '۴', 5: '۵', 6: '۶', 7: '۷', 8: '۸', 9: '۹' };
    function traverse(el) {
        if (el.nodeType == 3) {
            var list = el.data.match(/[0-9]/g);
            if (list != null && list.length != 0) {
                for (var i = 0; i < list.length; i++)
                    el.data = el.data.replace(list[i], persian[list[i]]);
            }
        }
        for (var i = 0; i < el.childNodes.length; i++) {
            traverse(el.childNodes[i]);
        }
    }
    traverse(document.body);
    $('.filter_length').on('keydown keyup', function (e) {
        var value = $(this).val();
        var max_length = $(this).attr("maxlength");        
        if (value.length >= max_length && e.keyCode !== 46 && e.keyCode !== 8) {
            e.preventDefault();
        }        
    });
    $(".textbox_automove_up").click(function () {
        $('html, body').animate({ scrollTop: $('.automove_up_region').offset().top - 170 }, 'slow');        
    });

    //$(".phone_number_mask").inputmask("#### ### ####");
    //
    //$(".hamrah_aval").click(function () {
    //    if ($(this).val() == "")
    //        $(this).val("091");
    //});
    //$(".hamrah_aval_irancell").click(function () {
    //    if ($(this).val() == "")
    //        $(this).val("09");
    //});
    $("a.close").click(function () {
        //console.log("closed");
        $(this).parent().hide();
    });

    $("#wrapper_main_soal .box_javab a").click(function () {
        setTimeout(
            function () {
                setInterval($("#wrapper_main_soal").fadeOut(500), 3000);
            }, 500);
    });
    
    if ($('#txt_code').length)//ejraye code faghat dar page confirm
    {
        setInterval(timer, 1000); //1000 will  run it every 1 second
    }
    $('.box_btn_show_ghavanin a').click(function () {
        $('#popup_ghavanin').modal('show');
        $(".modal-backdrop").hide();
    });
   
    if ($("#wrapper_main_generate").length == 0 || $(".box_steps").hasClass("hidden")) {
        //$("#btn_popup_ghavanin").css("opacity","0");
    }
    else {
        //$("#btn_popup_ghavanin").css("opacity", "1");
        var _originalSize = $(window).width() + $(window).height()
        $(window).resize(function () {
            if ($(window).width() + $(window).height() != _originalSize) {
                //$("#btn_popup_ghavanin").css("opacity", "0");
                $(".box_form_fix_bottom").css("margin-bottom", "-25px");
            } else {
                //$("#btn_popup_ghavanin").css("opacity", "1");
                $(".box_form_fix_bottom").css("margin-bottom", "0");
            }
        });
    }
    

});
var count = 60;
function timer() {
    count = count - 1;
    if (count == 0) {
        //clearInterval(counter);        
        document.getElementById("lbl_timer_confirm").innerHTML = "کد فعالسازی برای شما SMS شده است";
        $("#lbl_timer_confirm").css("display", "block");
        
        return;
    }
    else if (count > 0)
    {
        document.getElementById("lbl_timer_confirm").innerHTML = "لطفا منتظر بمانید تا کد SMS شود <img src='/assets/img/landing/icon_timer.png'/><span>" + count + "</span>"; // watch for spelling
    }
    //console.log("started");
}






    
/*!* Bootstrap v3.3.7 (http://getbootstrap.com) */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +function (t) { "use strict"; var e = t.fn.jquery.split(" ")[0].split("."); if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4") }(jQuery), +function (t) { "use strict"; function e(e, i) { return this.each(function () { var s = t(this), n = s.data("bs.modal"), r = t.extend({}, o.DEFAULTS, s.data(), "object" == typeof e && e); n || s.data("bs.modal", n = new o(this, r)), "string" == typeof e ? n[e](i) : r.show && n.show(i) }) } var o = function (e, o) { this.options = o, this.$body = t(document.body), this.$element = t(e), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, t.proxy(function () { this.$element.trigger("loaded.bs.modal") }, this)) }; o.VERSION = "3.3.7", o.TRANSITION_DURATION = 300, o.BACKDROP_TRANSITION_DURATION = 150, o.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }, o.prototype.toggle = function (t) { return this.isShown ? this.hide() : this.show(t) }, o.prototype.show = function (e) { var i = this, s = t.Event("show.bs.modal", { relatedTarget: e }); this.$element.trigger(s), this.isShown || s.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', t.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function () { i.$element.one("mouseup.dismiss.bs.modal", function (e) { t(e.target).is(i.$element) && (i.ignoreBackdropClick = !0) }) }), this.backdrop(function () { var s = t.support.transition && i.$element.hasClass("fade"); i.$element.parent().length || i.$element.appendTo(i.$body), i.$element.show().scrollTop(0), i.adjustDialog(), s && i.$element[0].offsetWidth, i.$element.addClass("in"), i.enforceFocus(); var n = t.Event("shown.bs.modal", { relatedTarget: e }); s ? i.$dialog.one("bsTransitionEnd", function () { i.$element.trigger("focus").trigger(n) }).emulateTransitionEnd(o.TRANSITION_DURATION) : i.$element.trigger("focus").trigger(n) })) }, o.prototype.hide = function (e) { e && e.preventDefault(), e = t.Event("hide.bs.modal"), this.$element.trigger(e), this.isShown && !e.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), t(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), t.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", t.proxy(this.hideModal, this)).emulateTransitionEnd(o.TRANSITION_DURATION) : this.hideModal()) }, o.prototype.enforceFocus = function () { t(document).off("focusin.bs.modal").on("focusin.bs.modal", t.proxy(function (t) { document === t.target || this.$element[0] === t.target || this.$element.has(t.target).length || this.$element.trigger("focus") }, this)) }, o.prototype.escape = function () { this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", t.proxy(function (t) { 27 == t.which && this.hide() }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal") }, o.prototype.resize = function () { this.isShown ? t(window).on("resize.bs.modal", t.proxy(this.handleUpdate, this)) : t(window).off("resize.bs.modal") }, o.prototype.hideModal = function () { var t = this; this.$element.hide(), this.backdrop(function () { t.$body.removeClass("modal-open"), t.resetAdjustments(), t.resetScrollbar(), t.$element.trigger("hidden.bs.modal") }) }, o.prototype.removeBackdrop = function () { this.$backdrop && this.$backdrop.remove(), this.$backdrop = null }, o.prototype.backdrop = function (e) { var i = this, s = this.$element.hasClass("fade") ? "fade" : ""; if (this.isShown && this.options.backdrop) { var n = t.support.transition && s; if (this.$backdrop = t(document.createElement("div")).addClass("modal-backdrop " + s).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", t.proxy(function (t) { return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (t.target === t.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide())) }, this)), n && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !e) return; n ? this.$backdrop.one("bsTransitionEnd", e).emulateTransitionEnd(o.BACKDROP_TRANSITION_DURATION) : e() } else if (!this.isShown && this.$backdrop) { this.$backdrop.removeClass("in"); var r = function () { i.removeBackdrop(), e && e() }; t.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", r).emulateTransitionEnd(o.BACKDROP_TRANSITION_DURATION) : r() } else e && e() }, o.prototype.handleUpdate = function () { this.adjustDialog() }, o.prototype.adjustDialog = function () { var t = this.$element[0].scrollHeight > document.documentElement.clientHeight; this.$element.css({ paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : "", paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : "" }) }, o.prototype.resetAdjustments = function () { this.$element.css({ paddingLeft: "", paddingRight: "" }) }, o.prototype.checkScrollbar = function () { var t = window.innerWidth; if (!t) { var e = document.documentElement.getBoundingClientRect(); t = e.right - Math.abs(e.left) } this.bodyIsOverflowing = document.body.clientWidth < t, this.scrollbarWidth = this.measureScrollbar() }, o.prototype.setScrollbar = function () { var t = parseInt(this.$body.css("padding-right") || 0, 10); this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", t + this.scrollbarWidth) }, o.prototype.resetScrollbar = function () { this.$body.css("padding-right", this.originalBodyPad) }, o.prototype.measureScrollbar = function () { var t = document.createElement("div"); t.className = "modal-scrollbar-measure", this.$body.append(t); var e = t.offsetWidth - t.clientWidth; return this.$body[0].removeChild(t), e }; var i = t.fn.modal; t.fn.modal = e, t.fn.modal.Constructor = o, t.fn.modal.noConflict = function () { return t.fn.modal = i, this }, t(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (o) { var i = t(this), s = i.attr("href"), n = t(i.attr("data-target") || s && s.replace(/.*(?=#[^\s]+$)/, "")), r = n.data("bs.modal") ? "toggle" : t.extend({ remote: !/#/.test(s) && s }, n.data(), i.data()); i.is("a") && o.preventDefault(), n.one("show.bs.modal", function (t) { t.isDefaultPrevented() || n.one("hidden.bs.modal", function () { i.is(":visible") && i.trigger("focus") }) }), e.call(n, r, this) }) }(jQuery);
//$(document).ready(function () {
//    /*----disable back browser : start----*/
//    window.history.pushState(null, "", window.location.href);
//    window.onpopstate = function () {
//        window.history.pushState(null, "", window.location.href);
//    };
//    /*----disable back browser : finish----*/
//});
//if (window.history && window.history.pushState) {//check event back browser
//    //window.history.pushState('forward', null, './#forward');//change url browser whitoud refresh page
//    $(window).on('popstate', function () {
//        //console.log('Back button was pressed.'); 
//        var count_news_popup = $(".row_popup").children().length;//get popup news count        
//        if (parseInt(count_news_popup) > 0) {//check popup news count
//            $('#popup_back').modal('show');//run popup (if user clicked on browserb back button)
//        }
//    });
//}